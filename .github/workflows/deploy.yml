name: Deploy to VPS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: SSH vào VPS và deploy container
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            echo "🚀 Đang deploy GymFitness API..."

            # Tạo thư mục /app nếu chưa tồn tại
            mkdir -p /app/config

            # Ghi file config từ GitHub Secrets
            echo '${{ secrets.APPSETTINGS_JSON }}' > /app/config/appsettings.json
            echo '${{ secrets.APPSETTINGS_DEVELOPMENT_JSON }}' > /app/config/appsettings.Development.json
            echo '${{ secrets.FIREBASE_CONFIG_JSON }}' > /app/config/firebase_config.json

            # Dừng và xóa container cũ (nếu có)
            docker stop gymfitness_api || true
            docker rm gymfitness_api || true
            docker stop gymfitnessapi_redis_1 || true
            docker rm gymfitnessapi_redis_1 || true

            # Pull image mới từ Docker Hub
            docker pull nguyenanhquan23324/gymfitness-api:latest

            # Chạy Redis
            docker run -d --name gymfitnessapi_redis_1 -p 6379:6379 redis:alpine

            # Chạy API
            docker run -d --name gymfitness_api \
              -p 8080:8080 -p 8000:80 -p 8001:443 \
              --restart always \
              --env ASPNETCORE_ENVIRONMENT=Production \
              --env ASPNETCORE_URLS=http://+:80 \
              --link gymfitnessapi_redis_1 \
              -v /app/config/appsettings.json:/app/appsettings.json \
              -v /app/config/appsettings.Development.json:/app/appsettings.Development.json \
              -v /app/config/firebase_config.json:/app/firebase_config.json \
              nguyenanhquan23324/gymfitness-api:latest

            echo "✅ Deployment hoàn tất!"
